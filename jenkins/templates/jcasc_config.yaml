{{ if eq .Values.jcasc.isenabled true }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-jcasc-config
  namespace: {{ .Release.Name }}
data:
  jcasc-config.yaml: |
    jenkins:
      agentProtocols:
      - "JNLP4-connect"
      - "Ping"
      authorizationStrategy:
        loggedInUsersCanDoAnything:
          allowAnonymousRead: false
      clouds:
      - kubernetes:
          containerCap: 10
          containerCapStr: "10"
          name: "kubernetes"
          namespace: {{ .Release.Name  | quote }}
          templates:
          - containers:
            - args: "9999999"
              command: "sleep"
              image: "jenkins/inbound-agent:latest"
              livenessProbe:
                failureThreshold: 0
                initialDelaySeconds: 0
                periodSeconds: 0
                successThreshold: 0
                timeoutSeconds: 0
              name: "jnlp"
              resourceLimitCpu: "800m"
              resourceLimitMemory: "250Mi"
              resourceRequestCpu: "500m"
              resourceRequestMemory: "100Mi"
              workingDir: "/home/jenkins/agent"
            id: "689d1022-3505-4b29-8b3f-bc8fdeafce56"
            label: "worker"
            name: "worker"
            namespace: {{ .Release.Name  | quote }}
            yamlMergeStrategy: "override"
      crumbIssuer:
        standard:
          excludeClientIPFromCrumb: false
      disableRememberMe: false
      labelAtoms:
      - name: "built-in"
      - name: "worker"
      markupFormatter: "plainText"
      mode: NORMAL
      myViewsTabBar: "standard"
      numExecutors: 0
      primaryView:
        all:
          name: "all"
      projectNamingStrategy: "standard"
      quietPeriod: 5
      remotingSecurity:
        enabled: true
      scmCheckoutRetryCount: 3
      securityRealm:
        local:
          allowsSignup: false
          enableCaptcha: false
          users:
          - id: "admin"
            name: "admin"
            properties:
            - "apiToken"
            - "mailer"
            - "myView"
            - preferredProvider:
                providerId: "default"
            - "timezone"
          - id: "omar"
            name: "omar"
            properties:
            - "myView"
            - preferredProvider:
                providerId: "default"
            - "timezone"
            - mailer:
                emailAddress: "o@o.com"
            - "apiToken"
      slaveAgentPort: 50000
      systemMessage: "This Jenkins instance is generated from code via JCasC plugin."
      updateCenter:
        sites:
        - id: "default"
          url: "https://updates.jenkins.io/update-center.json"
      views:
      - all:
          name: "all"
      viewsTabBar: "standard"
    globalCredentialsConfiguration:
      configuration:
        providerFilter: "none"
        typeFilter: "none"
    security:
      apiToken:
        creationOfLegacyTokenEnabled: false
        tokenGenerationOnCreationEnabled: false
        usageStatisticsEnabled: true
      sSHD:
        port: -1
    unclassified:
      buildDiscarders:
        configuredBuildDiscarders:
        - "jobBuildDiscarder"
      buildStepOperation:
        enabled: false
      casCGlobalConfig:
        configurationPath: "/var/jenkins_conf"
      email-ext:
        adminRequiredForTemplateTesting: false
        allowUnregisteredEnabled: false
        charset: "UTF-8"
        debugMode: false
        defaultBody: |-
          $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

          Check console output at $BUILD_URL to view the results.
        defaultSubject: "$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!"
        defaultTriggerIds:
        - "hudson.plugins.emailext.plugins.trigger.FailureTrigger"
        maxAttachmentSize: -1
        maxAttachmentSizeMb: -1
        precedenceBulk: false
        watchingEnabled: false
      fingerprints:
        fingerprintCleanupDisabled: false
        storage: "file"
      gitHubConfiguration:
        apiRateLimitChecker: ThrottleForNormalize
      gitHubPluginConfig:
        hookUrl: "http://{{ .Values.host_ip }}:{{ .Values.service_host_port }}/github-webhook/"
      gitSCM:
        addGitTagAction: false
        allowSecondFetch: false
        createAccountBasedOnEmail: false
        disableGitToolChooser: false
        hideCredentials: false
        showEntireCommitSummaryInChanges: false
        useExistingAccountWithSameEmail: false
      junitTestResultStorage:
        storage: "file"
      location:
        adminAddress: "address not configured yet <nobody@nowhere>"
        url: "http://{{ .Values.host_ip }}:{{ .Values.service_host_port }}/"
      mailer:
        charset: "UTF-8"
        useSsl: false
        useTls: false
      pollSCM:
        pollingThreadCount: 10
      timestamper:
        allPipelines: false
        elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
        systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
    tool:
      git:
        installations:
        - home: "git"
          name: "Default"
      mavenGlobalConfig:
        globalSettingsProvider: "standard"
        settingsProvider: "standard"


{{ end }}